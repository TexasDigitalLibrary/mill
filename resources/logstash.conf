input {
  lumberjack {
    codec => multiline {
      pattern => "(^\s)|(^Caused by:)|(^.+Exception: .+)"
      what => "previous"
    }
    port => 5555
    type => notype
    ssl_certificate => "/opt/logstash/logstash.crt"
    ssl_key => "/opt/logstash/logstash.key"
  }
}

filter {
  if "dc-mill" in [source] {
    grok {
      match => [
        "message", "dup_size=%{INT:dup_size:int}%{SPACE}space=%{NOTSPACE}%{SPACE}account=%{WORD:account}",
        "message", "dup_lp_qsize=%{INT:dup_lp_qsize:int} dup_hp_qsize=%{INT:dup_hp_qsize:int} dup_dl_qsize=%{INT:dup_dl_qsize:int}",
        "message", "Session stats \(global incremental\): dups=%{INT:ltp_dups:int} deletes=%{INT:ltp_deletes:int}"
      ]
    }
  }

  # The next 3 blocks (grok, date, mutate) attempt to pull a timestamp from the message
  # and set it as the timestamp within ElasticSearch
  grok {
    match => [
      "message", "%{YMDTIME:log_timestamp}",
      "message", "%{TIMESTAMP_ISO8601:log_timestamp}"
    ]
    patterns_dir => "/opt/logstash/patterns"
    add_field => [ "received_at", "%{@timestamp}" ]
  }
  date {
    match => [ "log_timestamp", "yyyy/MM/dd HH:mm:ss", "yyyy-MM-dd HH:mm:ss", "yyyy-MM-dd HH:mm:ss,SSS", "ISO8601" ]
  }
  mutate {
    remove_field => [ "log_timestamp" ]
  }

}

output {
  elasticsearch {
    host => "127.0.0.1"
  }
}